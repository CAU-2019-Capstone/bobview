# Generated by Django 2.2.6 on 2019-10-14 13:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_owner', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user_info',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MenuInfo',
            fields=[
                ('menu_id', models.AutoField(primary_key=True, serialize=False)),
                ('menu_name', models.CharField(max_length=45)),
                ('menu_price', models.IntegerField()),
                ('menu_desc', models.TextField()),
                ('menu_image', models.ImageField(blank=True, upload_to='')),
            ],
            options={
                'db_table': 'menu_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RestaurantInfo',
            fields=[
                ('restaurant_name', models.CharField(max_length=45, primary_key=True, serialize=False, unique=True)),
                ('restaurant_address', models.CharField(max_length=128, unique=True)),
                ('restaurant_latitude', models.FloatField()),
                ('restaurant_longitude', models.FloatField()),
                ('restaurant_image', models.ImageField(blank=True, upload_to='')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'restaurant_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserOrder',
            fields=[
                ('user_order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_time', models.DateTimeField()),
                ('tot_price', models.IntegerField()),
                ('table_id', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_order',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RestRating',
            fields=[
                ('rest_rating_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.FloatField()),
                ('desc', models.TextField()),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.RestaurantInfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rest_rating',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OrderContents',
            fields=[
                ('order_contents_id', models.AutoField(primary_key=True, serialize=False)),
                ('menu_num', models.IntegerField()),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.MenuInfo')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.RestaurantInfo')),
                ('userorder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.UserOrder')),
            ],
            options={
                'db_table': 'order_contents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MenuRating',
            fields=[
                ('menu_rating_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.FloatField()),
                ('desc', models.TextField()),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.MenuInfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'menu_rating',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='menuinfo',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.RestaurantInfo'),
        ),
    ]
