//    dPOS  - Dongwun Point Of Sale
//    Copyright (c) 2009-2017 Dongwun & uniCenta & previous Openbravo POS works
//    http://www.dongwun.com
//
//    This file is part of dPOS
//
//    dPOS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//   dPOS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with dPOS.  If not, see <http://www.gnu.org/licenses/>.
//    CSV Import Panel added by JDL - February 2013
//    Additonal library required - javacsv
package com.openbravo.pos.customers;

import com.openbravo.pos.forms.StartPOS;

import com.openbravo.basic.BasicException;
import com.openbravo.data.gui.MessageInf;
import com.openbravo.data.loader.LocalRes;
import com.openbravo.pos.forms.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import surem.api.sms.SureSMSAPI;
import surem.api.tcp.sms.SureSMSDeliveryReport;
import surem.api.tcp.sms.SureSMSSendReport;
import surem.api.mms.SureMMSAPI;
import surem.api.tcp.mms.SureMMSDeliveryReport;
import surem.api.tcp.mms.SureMMSSendReport;

/**
 *
 * @author DongWoon
 */
@SuppressWarnings({"rawtypes", "unchecked"})
public class CustomerSendMessage extends JPanel implements JPanelView {
    private static final long serialVersionUID = -2099321922133069766L;

    private boolean flag;
    private boolean flag2;
    private AppConfig config;
    private DataLogicCustomers dlcustomers;
    private DataLogicSales dlsales;
    private CustomerInfoExt customerext;

    //Parameters declaration
    private String dest_phone;
    private String send_phone;
    private String msg_body;
    private String send1;
    private String send2;
    private String send3;
    private String dest1;
    private String dest2;
    private String dest3;
    private String usercode;
    private String username;
    private String deptcode;
    private String callname;
    private String rdate;
    private String ddate;
    private byte[] msg_bytes;
    //declaration end

    public CustomerSendMessage() {

    }

    public CustomerSendMessage(AppView oApp) {

        this(oApp.getProperties());
        dlcustomers = (DataLogicCustomers) oApp.getBean("com.openbravo.pos.customers.DataLogicCustomers");
        dlsales = (DataLogicSales) oApp.getBean("com.openbravo.pos.forms.DataLogicSales");

    }

    public CustomerSendMessage(AppProperties Apps) {

        initComponents();
        flag = false;
        flag2 = false;
        config = new AppConfig(Apps.getConfigFile());
        config.load();

    }

    private void editCustomer(CustomerInfoExt customer) {

        customerext = customer;

        jReceiverNumber.setText(customerext.getPhone2());

    }

    //바이트 수 계산 및 출력 메서드
    public void byteCount(javax.swing.JTextArea jtxt, String msg, byte[] bytes, javax.swing.JLabel label) {

        msg = jtxt.getText();
        try {
            bytes = msg.getBytes("EUC-KR");        // 한글 2byte 계산을 위해 EUC-KR 방식으로 바이트 계산
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(CustomerSendMessage.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (bytes.length <= 90) {
            flag2 = false;
            label.setText(Integer.toString(bytes.length) + " / 90bytes");
        } //90byte가 넘어가면 뒤의 글자가 MMS로 변경 
        else {
            if (!flag2) {
                JOptionPane.showMessageDialog(this, "MMS로 전환됩니다.\n추가요금이 발생하오니 유의해주세요.");
                flag2 = true;
            }

            label.setText(Integer.toString(bytes.length) + " / MMS");
        }

    }

    //화면 초기화 메서드
    public void initScreen(javax.swing.JTextField jrcvNum, javax.swing.JLabel label, javax.swing.JTextArea jtxt, boolean flg, boolean flg2) {
        jrcvNum.setText("");
        label.setText("0 / 90bytes");
        jtxt.setText(LocalRes.getIntString("message.inittext"));
        flg = false;
        flg2 = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSendButton = new javax.swing.JButton();
        jReceiverNumber = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMessage = new javax.swing.JTextArea();
        jBtnCutomerFind = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCountLabel = new javax.swing.JLabel();
        jTextCombo = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        jLabel1.setFont(StartPOS.getgblFont().deriveFont(0, 12));
        jLabel1.setText("받는 번호");

        jSendButton.setFont(StartPOS.getgblFont().deriveFont(0, 12));
        jSendButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/message.png"))); // NOI18N
        jSendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSendButtonActionPerformed(evt);
            }
        });

        jReceiverNumber.setFont(StartPOS.getgblFont().deriveFont(0, 12));
        jReceiverNumber.setMinimumSize(new java.awt.Dimension(135, 20));
        jReceiverNumber.setPreferredSize(new java.awt.Dimension(200, 30));

        jMessage.setColumns(20);
        jMessage.setFont(StartPOS.getgblFont().deriveFont(0, 15));
        jMessage.setLineWrap(true);
        jMessage.setRows(5);
        jMessage.setText("여기에 텍스트를 입력하세요");
        jMessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMessageMouseClicked(evt);
            }
        });
        jMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jMessageKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jMessage);

        jBtnCutomerFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/customer_sml.png"))); // NOI18N
        jBtnCutomerFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCutomerFindActionPerformed(evt);
            }
        });

        jLabel3.setFont(StartPOS.getgblFont().deriveFont(0, 12));
        jLabel3.setText("형식 : (010-xxxx-xxxx)");

        jLabel5.setFont(StartPOS.getgblFont().deriveFont(0, 12));
        jLabel5.setText("고객 검색");

        jCountLabel.setText("0 / 90bytes");

        jTextCombo.setFont(StartPOS.getgblFont().deriveFont(0, 12));
        jTextCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "====메세지 선택====", "세탁물 완료 메세지", "업체 홍보 메세지", "상품 안내 메세지", "정상 접수 메세지", "보풀 안내 메세지", "변색 안내 메세지", "손상 안내 메세지", "외상 지불 메세지", "휴무 안내 메세지" }));
        jTextCombo.setPreferredSize(new java.awt.Dimension(150, 30));
        jTextCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextComboActionPerformed(evt);
            }
        });

        jButton1.setFont(StartPOS.getgblFont().deriveFont(0, 12));
        jButton1.setText("문자 충전");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCountLabel)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jBtnCutomerFind, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jReceiverNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jSendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnCutomerFind, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jReceiverNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSendButton)
                .addContainerGap(188, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jMessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMessageMouseClicked
        if (!flag) {
            jMessage.setText("");
            byteCount(jMessage, msg_body, msg_bytes, jCountLabel);
            flag = true;
        }
    }//GEN-LAST:event_jMessageMouseClicked

    private void jSendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSendButtonActionPerformed

        dest_phone = jReceiverNumber.getText();
        send_phone = config.getProperty("sms.sender");
        msg_body = jMessage.getText();
        dest1 = dest_phone.split("-")[0];
        dest2 = dest_phone.split("-")[1];
        dest3 = dest_phone.split("-")[2];
        send1 = send_phone.split("-")[0];
        send2 = send_phone.split("-")[1];
        send3 = send_phone.split("-")[2];

        // 현재 보내는 메세지가 총 몇 byte인지 계산
        try {
            msg_bytes = msg_body.getBytes("EUC-KR");    // 한글 2byte 계산을 위해 EUC-KR 방식으로 바이트 계산
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(CustomerSendMessage.class.getName()).log(Level.SEVERE, null, ex);
        }

        usercode = config.getProperty("sms.user");    //SMS 서비스를 이용하려면 www.surem.co.kr 접속 후 회원가입.       
        username = "동운시스템";
        deptcode = config.getProperty("sms.code");
        callname = "동운시스템";
        rdate = "00000000";     //즉시 전송하려면 0으로 통일, 형식은 yyyy/MM/dd
        ddate = "000000";

        // 90bytes 한도 내의 메세지는 SMS로 전송
        if (msg_bytes.length <= 90) {
            SureSMSAPI sms = new SureSMSAPI() {
                @Override
                public void report(SureSMSDeliveryReport dr) {
                    System.out.print("msgkey=" + dr.getMember() + "\t");	// 메시지 고유값
                    System.out.print("result=" + dr.getMember() + "\t");	// '2': 전송 결과 성공.  '4': 전송 결과 실패
                    System.out.print("errorcode=" + dr.getErrorCode() + "\t");	// 결과 코드 
                    System.out.print("recvtime=" + dr.getRecvDate() + dr.getRecvTime() + "\t");	// 단말기 수신 시간
                    System.out.println();
                }
            };

            SureSMSSendReport sr = sms.sendMain(1, usercode, deptcode, username, dest1, dest2, dest3, callname, send1, send2, send3, msg_body, rdate, ddate);
            System.out.println(sr.getMember());	// 메시지 고유값
            System.out.println(sr.getStatus());	// 'O': 전송 요청 성공  

            sms.recvReport(rdate, usercode, deptcode);	// 전송 결과 요청

            initScreen(jReceiverNumber, jCountLabel, jMessage, flag, flag2);

        } //90byte를 초과한 메세지에 대해서 MMS 전송기능으로 전환
        else {

            send_phone = send1 + send2 + send3;
            dest_phone = dest1 + dest2 + dest3;

            SureMMSAPI mms = new SureMMSAPI() {

                @Override
                public void report(SureMMSDeliveryReport dr) {
                    System.out.print("msgkey=" + dr.getMember() + "\t");	// 메시지 고유값
                    System.out.print("result=" + dr.getMember() + "\t");	// '2': 전송 결과 성공.  '4': 전송 결과 실패
                    System.out.print("errorcode=" + dr.getErrorCode() + "\t");	// 결과 코드 
                    System.out.print("recvtime=" + dr.getRecvDate() + dr.getRecvTime() + "\t");	// 단말기 수신 시간
                    System.out.println();
                }
            };

            SureMMSSendReport sr = mms.sendMain(1, usercode, deptcode, dest_phone, send_phone, "00000000000000", "", msg_body, "", "", "");
            System.out.println(sr.getMember());	// 메시지 고유값
            System.out.println(sr.getStatus());	// 'O': 전송 요청 성공  

            mms.recvReport(rdate, usercode, deptcode);	// 전송 결과 요청

            initScreen(jReceiverNumber, jCountLabel, jMessage, flag, flag2);
        }

    }//GEN-LAST:event_jSendButtonActionPerformed

    private void jBtnCutomerFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCutomerFindActionPerformed
        JCustomerFinder finder = JCustomerFinder.getCustomerFinder(this, dlcustomers);
        finder.search(null);
        finder.setVisible(true);
        CustomerInfo customer = finder.getSelectedCustomer();
        if (customer != null) {
            try {
                CustomerInfoExt c = dlsales.loadCustomerExt(customer.getId());
                if (c == null) {
                    MessageInf msg = new MessageInf(MessageInf.SGN_WARNING, AppLocal.getIntString("message.cannotfindcustomer"));
                    msg.show(this);
                } else {
                    editCustomer(c);
                }
            } catch (BasicException ex) {
                MessageInf msg = new MessageInf(MessageInf.SGN_WARNING, AppLocal.getIntString("message.cannotfindcustomer"), ex);
                msg.show(this);
            }
        }
    }//GEN-LAST:event_jBtnCutomerFindActionPerformed

    // 텍스트 창에 글씨 입력할 때마다 바이트 수 계산
    private void jMessageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jMessageKeyReleased
        byteCount(jMessage, msg_body, msg_bytes, jCountLabel);
    }//GEN-LAST:event_jMessageKeyReleased

    private void jTextComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextComboActionPerformed
        if (evt.getSource() == jTextCombo) {
            switch (jTextCombo.getSelectedIndex()) {
                case 0:
                    jMessage.setText(LocalRes.getIntString("message.inittext"));
                    break;

                case 1:
                    jMessage.setText(LocalRes.getIntString("message.donemessage"));
                    break;

                case 2:
                    jMessage.setText(LocalRes.getIntString("message.admessage"));
                    break;

                case 3:
                    jMessage.setText(LocalRes.getIntString("message.thxmessage"));
                    break;

                case 4:
                    jMessage.setText(LocalRes.getIntString("message.addmessage"));
                    break;

                case 5:
                    jMessage.setText(LocalRes.getIntString("message.bopulmessage"));
                    break;

                case 6:
                    jMessage.setText(LocalRes.getIntString("message.byunmessage"));
                    break;

                case 7:
                    jMessage.setText(LocalRes.getIntString("message.defectmessage"));
                    break;

                case 8:
                    jMessage.setText(LocalRes.getIntString("message.debtmessage"));
                    break;

                case 9:
                    jMessage.setText(LocalRes.getIntString("message.holidaymessage"));
                    break;
            }
            byteCount(jMessage, msg_body, msg_bytes, jCountLabel);
            flag = true;
        }
    }//GEN-LAST:event_jTextComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String URL = "http://www.surem.co.kr/payment/P_Banking_SelectPrice.asp";
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    @Override
    public String getTitle() {
        return AppLocal.getIntString("Menu.SendMessages");
    }

    @Override
    public void activate() throws BasicException {
        // Nothing To do
    }

    @Override
    public boolean deactivate() {
        return (true);
    }

    @Override
    public JComponent getComponent() {
        return this;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCutomerFind;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jCountLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    public javax.swing.JTextArea jMessage;
    public javax.swing.JTextField jReceiverNumber;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSendButton;
    private javax.swing.JComboBox jTextCombo;
    // End of variables declaration//GEN-END:variables

}
